#include <SDL.h>
#include <stdio.h>
#include <stdlib.h>

// gcc src/main.c -o bin/prog -I include -L lib -lmingw32 -lSDL2main -lSDL2
void SDL_ExitWithError(const char *message);

int main(int argc, char **argv)
{
    SDL_Window *Window = NULL;
    SDL_Renderer *renderer = NULL;

    // lancement SDL
    if(SDL_Init(SDL_INIT_VIDEO) != 0)
        SDL_ExitWithError("Initialisation SDL");


    //Execution du programme
    Window = SDL_CreateWindow("première fenetrre SDL2", SDL_WINDOWPOS_CENTERED, SDL_WINDOWPOS_CENTERED,800, 600,0);

    if(Window == NULL)
        SDL_ExitWithError("Creation fenetre echoué");

    /*-----------------------------*/
    renderer = SDL_CreateRenderer(Window, -1, SDL_RENDERER_SOFTWARE);

    if(renderer == NULL)
        SDL_ExitWithError("creation rendu echoué");

    SDL_RenderPresent(renderer);

    SDL_Delay(3000);
    /*-----------------------------*/

    SDL_DestroyRenderer(renderer);
    SDL_DestroyWindow(Window);
    SDL_Quit();

    return EXIT_SUCCESS; // return 0;
}

void SDL_ExitWithError(const char *message)
{
    SDL_Log("Erreur : %s > %s\n", message, SDL_GetError());
    SDL_Quit();
    exit(EXIT_FAILURE);
}

*************************************************************************************************************************************************************************

// gcc src/main.c -o bin/prog -I include -L lib -lmingw32 -lSDL2main -lSDL2
// gcc src/main.c -o bin/prog -I include -L lib -lmingw32 -lSDL2main -lSDL2 -mwindows sans terminal

INIATION :
    SDL_Init(SDL_INIT_VIDEO); 

renvoie erreur : 
    if(SDL_Init(SDL_INIT_VIDEO) != 0)
    {
        SDL_Log("erreur%s", SDL_GetError());
        exit(EXIT_FAILURE);
    }  

Renderer :
    SDL_RENDERER_SOFTWARE
    SDL_RENDERER_ACCELERATED
    SDL_RENDERER_PRESENTVSYNC
    SDL_RENDERER_TARGETTEXTURE

    
    if(SDL_RenderClear(renderer) != 0)
        SDL_ExitWithError("Effacement rendue echoué");

    ou

        // création fenetre = rendue
    if(SDL_CreateWindowAndRenderer(800, 600, 0, &Window, &renderer) != 0)
        SDL_ExitWithError("impossible de creer la fenetre et le rendue");

autrechose :
        if(SDL_SetRenderDrawColor(renderer, 112, 168, 237, SDL_ALPHA_OPAQUE) != 0)
        SDL_ExitWithError("Impossible la couleur");

dessiner :
        if(SDL_RenderDrawPoint(renderer, 100, 450) != 0)
        SDL_ExitWithError("Impossible de dessiner un point");

            if(SDL_SetRenderDrawColor(renderer, 112, 168, 237, SDL_ALPHA_OPAQUE) != 0)
        SDL_ExitWithError("Impossible la couleur");

    if(SDL_RenderDrawPoint(renderer, 100, 450) != 0)
        SDL_ExitWithError("Impossible de dessiner un point");

    if(SDL_RenderDrawLine(renderer, 50, 50, 500,500) != 0)
        SDL_ExitWithError("Impossible de dessiner un line");

    SDL_Rect rectangle;
    rectangle.x = 300;
    rectangle.y = 300;
    rectangle.w = 200;
    rectangle.h = 120;

    if(SDL_RenderDrawRect(renderer, &rectangle) != 0)
        SDL_ExitWithError("Impossible de dessiner un rectangle");

while :
        SDL_bool program_launched = SDL_TRUE;

    while(program_launched)
    {
        SDL_Event event;

        while (SDL_PollEvent(&event))
        {
            switch (event.type)
            {
            case SDL_QUIT:
                program_launched = SDL_FALSE;
                break;
            
            default:
                break;
            }
        }
        
    }
